/* portasm.arm - Dataton 3397 Transponder
**
** FreeRTOS task switching and PIT interrupt.
** Because PIT and RTC is sharing the same hardware interrupt
** RTC is also called from here
**
** (C) Copyright Dataton AB 2009, All Rights Reserved
**
**/
		.text
		.align 4

	.nothumb
	.need vFreeRTOSTimerCall
	.need vTaskSwitchContext
	.need rtcDrvISR

	.globl vPortYieldProcessor
	.globl vPortPreemptiveTick
	.globl vPortStartFirstTask

#include "Atmel/AT91SAM7S256_inc.h"
#include "ISR_Support.h"

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Starting the first task is just a matter of restoring the context that
; was created by pxPortInitialiseStack().
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
vPortStartFirstTask:
	portRESTORE_CONTEXT

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Manual context switch function.  This is the SWI hander.
; It's called from Cstartup.arm
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
vPortYieldProcessor:
	ADD		LR, LR, #4			; Add 4 to the LR to make the LR appear exactly 
								; as if the context was saved during and IRQ 
								; handler.
								
	portSAVE_CONTEXT			; Save the context of the current task...
	LDR R0, =vTaskSwitchContext	; before selecting the next task to execute.
	mov     lr, pc
	BX R0
	portRESTORE_CONTEXT			; Restore the context of the selected task.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Preemptive context switch function.  This will only get installed if
; portUSE_PREEMPTION is set to 1 in portmacro.h.
; This routine is only called if we are using PIT as time base for FreeRTOS
; and not timer TC1
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
vPortPreemptiveTick:
	portSAVE_CONTEXT			; Save the context of the current task.


	bl		rtcDrvISR			; Dispatch RTC interrupt.
	
	bl		vFreeRTOSTimerCall	; Increment the FreeRTOS tick count - this may wake a task.


	LDR	R14, =AT91C_BASE_PITC	; Clear the PIT interrupt
	LDR	R0, [R14, #PITC_PIVR ]

	LDR R14, =AT91C_BASE_AIC	; Mark the End of Interrupt on the AIC
   	STR	R14, [R14, #AIC_EOICR]

	portRESTORE_CONTEXT			; Restore the context of the selected task.


