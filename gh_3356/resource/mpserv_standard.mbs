// MULTI Server Script

//target tr d
//
//// Turn off Thumb mode
//$CPSR.T = 0
//// Switch the master clock to the main clock
//$PMC_MCKR.CSS = 0x1
//// Set the number of master clock cycles per microsecond
//$MC_FMR.FMCN = 10


//* --------------------------------------------------------------------------------------
//* 
//*       ATMEL Microcontroller Software Support  -  ROUSSET  -
//* --------------------------------------------------------------------------------------
//*  The software is delivered "AS IS" without warranty or condition of any
//*  kind, either express, implied or statutory. This includes without
//*  limitation any warranty or condition with respect to merchantability or
//*  fitness for any particular purpose, or against the infringements of
//*  intellectual property rights of others.
//* --------------------------------------------------------------------------------------
//*  File Name           : mpserv_Ram.mbs
//*  Object              : Setup script for the Ateml AT91 board AT91SAM7S
//* 
//*  1.0 08/dec/04 JPP   : Creation
//* --------------------------------------------------------------------------------------

//*  Controls the display mode of Debugger window's source pane
//assem on
echo "-- Target Reset"

//*  Firstly, select the ARM core
//*  target set target arm7tdmi

//*  Setup script for the Atmel AT91 board
//*  jr: Reset the JTAG TAP controller.
//target jr

//*  immediately after reset could add handlers itself.
//*  tr: Reset the target system using JTAG reset pins. When no parameters are given
//*  the target will reset and stay in the reset state if possible.
//* target tr

//*  halt: halt execution
//* target halt
target tr

//-----------------------------------------------------------------------------
// PllSetting
// -1- Enabling the Main Oscillator:
//*#define AT91C_PMC_MOR   ((AT91_REG *) 	0xFFFFFC20) // (PMC) Main Oscillator Register
//*#define AT91C_PMC_PLLR  ((AT91_REG *) 	0xFFFFFC2C) // (PMC) PLL Register
//*#define AT91C_PMC_MCKR  ((AT91_REG *) 	0xFFFFFC30) // (PMC) Master Clock Register
//*pPMC->PMC_MOR = (( AT91C_CKGR_OSCOUNT & (0x06 <<8) |    //0x0000 0600
//                          AT91C_CKGR_MOSCEN ));          //0x0000 0001 
memwrite 4 0xFFFFFC20 0x00000601
// -2- Wait
// -3- Setting PLL and divider:
// - div by 5 Fin = 3,6864 =(18,432 / 5)
// - Mul 25+1: Fout =	95,8464 =(3,6864 *26)
// for 96 MHz the erroe is 0.16%
// Field out NOT USED = 0
// PLLCOUNT pll startup time esrtimate at : 0.844 ms
// PLLCOUNT 28 = 0.000844 /(1/32768)
//       pPMC->PMC_PLLR = ((AT91C_CKGR_DIV & 0x05) |       //0x0000 0005
//                         (AT91C_CKGR_PLLCOUNT & (28<<8)) //0x0000 1C00
//                         (AT91C_CKGR_MUL & (25<<16)));   //0x0019 0000 
memwrite 4 0xFFFFFC2C 0x00191C05
// -2- Wait
// -5- Selection of Master Clock and Processor Clock
// select the PLL clock divided by 2
//	    pPMC->PMC_MCKR = AT91C_PMC_CSS_PLL_CLK |     //0x0000 0003
//                           AT91C_PMC_PRES_CLK_2 ;      //0x0000 0004
memwrite 4 0xFFFFFC30 0x00000007

// set MC_FMR.FMCN
memwrite 4 0xFFFFFC60 (48<<16)

echo "------------------------------- PLL  Enable -----------------------------------"

//* Watchdog Disable
//      AT91C_BASE_WDTC->WDTC_WDMR= AT91C_SYSC_WDDIS;
 memwrite 4 0xFFFFFD44 0x00008000
echo "------------------------------- Watchdog Disable ------------------------------"

eval r0 = * 0x00000000
eval r1 = r0 + 1
memwrite 4 0x00000000  r1
eval r1 = * 0x00000000

// REMAP with RAM AT ZERO:
if (r0 == r1) { 
    echo "-- AT91 Flash was at Zero"
    memwrite 4 0xFFFFFF00 0x00000001
    echo "-- now RAM at Zero"
} else {  
    echo "-- RAM at Zero"
//    memwrite 4 0xFFFFFF00 0x00000001
//    echo "-- Flash at Zero"
}

//*  Get the Chip ID
//echo -- Chip ID
//memread 4 0xFFFFF240

//*  Get the Lists all breakpoints.
//echo -- Get the Lists all breakpoints.
//B

//*  Set the mode register
target reg cpsr 0xd3

//* set All register for RESET
target reg r0 0x0
target reg r1 0x0
target reg r2 0x0
target reg r3 0x0
target reg r4 0x0
target reg r5 0x0
target reg r6 0x0
target reg r7 0x0
target reg r8 0x0
target reg r9 0x0
target reg r10 0x0
target reg r11 0x0
target reg r12 0x0
target reg pc 0x0

